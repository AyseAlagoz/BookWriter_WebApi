// <auto-generated />
using BookWriter.WebApi2.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookWriter.WebApi2.Migrations
{
    [DbContext(typeof(BWDbContext))]
    [Migration("20221124082829_Initial migration")]
    partial class Initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookWriter.WebApi2.Models.BookModel", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WriterId")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.HasIndex("WriterId");

                    b.ToTable("BookModels");
                });

            modelBuilder.Entity("BookWriter.WebApi2.Models.WriterModel", b =>
                {
                    b.Property<int>("WriterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WriterId"));

                    b.Property<string>("WriterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WriterId");

                    b.ToTable("WriterModels");
                });

            modelBuilder.Entity("BookWriter.WebApi2.Models.BookModel", b =>
                {
                    b.HasOne("BookWriter.WebApi2.Models.WriterModel", "WriterModel")
                        .WithMany("BookModels")
                        .HasForeignKey("WriterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WriterModel");
                });

            modelBuilder.Entity("BookWriter.WebApi2.Models.WriterModel", b =>
                {
                    b.Navigation("BookModels");
                });
#pragma warning restore 612, 618
        }
    }
}
